1. Initialize variables:
   - incoming, outgoing, buck_size, n, store = 0

2. Input values:
   - Prompt the user to enter buck_size, outgoing, and n
   - Read buck_size, outgoing, and n from the user

3. Loop for each packet i from 1 to n:
   a. Prompt the user to enter the size of the incoming packet (incoming)
   b. Print the size of the incoming packet (incoming)
   c. If incoming <= (buck_size - store):
      - Add incoming to store (bucket content)
      - Print the current bucket buffer size (store) and total bucket size (buck_size)
   d. Else:
      - Calculate the number of packets to drop (incoming - (buck_size - store))
      - Print the number of dropped packets
      - Print the current bucket buffer size (store) and total bucket size (buck_size)
      - Set store to buck_size (bucket is full)
   e. Subtract outgoing from store
      - If store < 0, set store to 0 (bucket can't be negative)
      - Print the remaining packet count in the buffer and total bucket size (buck_size)
   f. Decrement n

4. End of loop

5. End of program


